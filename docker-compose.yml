services:
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_DB=teachers_training
      - POSTGRES_USER=teachers_user
      - POSTGRES_PASSWORD=teachers_pass_2024
    networks:
      - teachers-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U teachers_user -d teachers_training"]
      interval: 10s
      timeout: 5s
      retries: 5

  neo4j:
    image: neo4j:5-community
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_dbms_memory_heap_initial__size=512m
      - NEO4J_dbms_memory_heap_max__size=2G
    networks:
      - teachers-network

  app:
    build: .
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      neo4j:
        condition: service_started
    environment:
      - NODE_ENV=production
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=teachers_training
      - DB_USER=teachers_user
      - DB_PASSWORD=teachers_pass_2024
      - CHROMA_URL=http://172.17.0.1:8000
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password
    env_file:
      - .env
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
      - ./public:/app/public
      - ./routes:/app/routes
      - ./services:/app/services
      - ./server.js:/app/server.js
      - ./credentials:/app/credentials:ro
      - ~/.config/gcloud:/home/nodejs/.config/gcloud:ro
    networks:
      - teachers-network
    restart: unless-stopped

volumes:
  postgres_data:
  neo4j_data:
  neo4j_logs:

networks:
  teachers-network:
    driver: bridge