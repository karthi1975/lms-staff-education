services:
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_DB=teachers_training
      - POSTGRES_USER=teachers_user
      - POSTGRES_PASSWORD=teachers_pass_2024
    networks:
      - teachers-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U teachers_user -d teachers_training"]
      interval: 10s
      timeout: 5s
      retries: 5

  chromadb:
    image: chromadb/chroma:latest
    ports:
      - "8000:8000"
    volumes:
      - chromadb_data:/chroma/chroma
    environment:
      - IS_PERSISTENT=TRUE
      - PERSIST_DIRECTORY=/chroma/chroma
      - ANONYMIZED_TELEMETRY=FALSE
    networks:
      - teachers-network

  neo4j:
    image: neo4j:5-community
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_dbms_memory_heap_initial__size=512m
      - NEO4J_dbms_memory_heap_max__size=2G
    networks:
      - teachers-network

  app:
    build: .
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      chromadb:
        condition: service_started
      neo4j:
        condition: service_started
    env_file:
      - .env
    environment:
      - NODE_ENV=production
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
      - ./public:/app/public
      - ./services:/app/services
      - ./routes:/app/routes
      - ./utils:/app/utils
      - ./scripts:/app/scripts
      - ./server.js:/app/server.js
      - ./package.json:/app/package.json
      - ~/.config/gcloud:/home/nodejs/.config/gcloud:ro
    networks:
      - teachers-network
    restart: unless-stopped

volumes:
  postgres_data:
  chromadb_data:
  neo4j_data:
  neo4j_logs:

networks:
  teachers-network:
    driver: bridge